C[c] is a general-purpose programming language. It was created in the 1970s by Dennis Ritchie and remains widely used
and influential. By design, C gives the programmer relatively direct access to the features of the typical CPU
architecture, customized for the target instruction set. It has been and continues to be used to implement operating
systems (especially kernels[10]), device drivers, and protocol stacks, but its use in application software has been
decreasing.[11] C is used on computers that range from the largest supercomputers to the smallest microcontrollers and
embedded systems.

A successor to the programming language B, C was originally developed at Bell Labs by Ritchie between 1972 and 1973 to
construct utilities running on Unix. It was applied to re-implementing the kernel of the Unix operating system.[12]
During the 1980s, C gradually gained popularity. It has become one of the most widely used programming languages,[13][14]
with C compilers available for practically all modern computer architectures and operating systems. The book The C
Programming Language, co-authored by the original language designer, served for many years as the de facto standard for
the language.[15][1] C has been standardized since 1989 by the American National Standards Institute (ANSI) and,
subsequently, jointly by the International Organization for Standardization (ISO) and the International Electrotechnical
Commission (IEC).

C is an imperative procedural language, supporting structured programming, lexical variable scope, and recursion, with
a static type system. It was designed to be compiled to provide low-level access to memory and language constructs that
map efficiently to machine instructions, all with minimal runtime support. Despite its low-level capabilities, the l
anguage was designed to encourage cross-platform programming. A standards-compliant C program written with portability
in mind can be compiled for a wide variety of computer platforms and operating systems with few changes to its source code.

Although neither C nor its standard library provide some popular features found in other languages, it is flexible
enough to support them. For example, object orientation and garbage collection are provided by external libraries
GLib Object System and Boehm garbage collector, respectively.

Since 2000, C has consistently ranked among the top four languages in the TIOBE index, a measure of the popularity of
programming languages.[16] Originally, C was popular mostly due to being easier to use than other programming languages.
[citation needed] Currently, C is popular mostly due to speed, efficiency, low memory usage, and simplicity.
[citation needed] C uses approximately one-eightieth the energy that Python, Perl, and PHP do.[17] On average, C uses
less energy than Fortran, despite Fortran being faster on average